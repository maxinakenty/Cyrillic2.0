

// Получаем значение в виде числа или возвращаем стоку (например auto, inheright or initial)
@function _leading-or-str($breakpoint-key-index, $multiplier) {
  $typeof_value: type-of($multiplier);

  @if $typeof_value == string {
    @return unquote($multiplier);

  } @else if $typeof_value == number {
    @return leading($breakpoint-key-index, $multiplier);

  } @else {
    @error "typeof #{$multiplier} must be a string or number";
  }
}


// Map deep get [function]
// -----------------------
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @if $map {
    @return $map;
  }

  @error "value is not in map";
  @return null;
}

// Round-to-even [function]
//-------------------------
//
/// Rounds the values to the nearest even.
/// Since when the browser converts odd values into rem units,
/// the font does not fit into the horizontal rhythm.
/// @access private
///
/// @param {Number} $value - number
/// @returns {Number} even number
@function _round-to-even($value) {
  @if type-of($value) == number {
     $result: 2 * round($value / 2);

     @return $result;
  }

  @error ' type-of #{$value} should a number.';
}


// Breakpoint key [function]
// -------------------------
/// @access private
///
/// @param {Number} $index - number
/// @returns {String} breakpoint key
@function _breakpoint-key($index) {
  @return  nth($breakpoints-keys, $index);
}


// Name with breakpoint key [function]
// ------------------------
/// @access private
/// @param {Number} - $breakpoint-key-index - key index in $breakpoints map.
/// @param {String} - $name -
///  The required key in $ sizes map without a breakpoint key prefix.
/// @returns {String} -
///   Key name with breakpoint key prefix.
@function _name-with-breakpoint-key($breakpoint-key-index, $name) {
  @return '#{_breakpoint-key($breakpoint-key-index)}-#{$name}';
}